{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "YINI",
  "scopeName": "source.yini",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#sections"
    },
    {
      "include": "#macros"
    },
    {
      "include": "#includes"
    },
    {
      "include": "#key_value_pairs"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.yini",
          "match": "//.*"
        },
        {
          "name": "comment.block.yini",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "sections": {
      "patterns": [
        {
          "name": "entity.name.section.yini",
          "begin": "\\[",
          "end": "\\]",
          "patterns": [
            {
              "name": "entity.name.tag.yini",
              "match": "[a-zA-Z0-9_]+"
            },
            {
              "name": "keyword.operator.inheritance.yini",
              "match": ":"
            },
            {
              "name": "entity.other.inherited-class.yini",
              "match": "[a-zA-Z0-9_]+"
            }
          ]
        }
      ]
    },
    "macros": {
      "name": "meta.preprocessor.yini",
      "begin": "^\\[#define\\]",
      "end": "(?=\\s*\\[)",
      "patterns": [
        {
          "include": "#key_value_pairs"
        }
      ]
    },
    "includes": {
      "name": "meta.preprocessor.yini",
      "begin": "^\\[#include\\]",
      "end": "(?=\\s*\\[)",
      "patterns": [
        {
          "include": "#key_value_pairs"
        }
      ]
    },
    "key_value_pairs": {
      "patterns": [
        {
          "name": "variable.parameter.yini",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*=)"
        },
        {
          "name": "keyword.operator.assignment.yini",
          "match": "[+=]=?"
        },
        {
          "include": "#values"
        }
      ]
    },
    "values": {
      "patterns": [
        {
          "name": "string.quoted.double.yini",
          "begin": "\"",
          "end": "\""
        },
        {
          "name": "constant.numeric.yini",
          "match": "\\b-?[0-9]+(\\.[0-9]+)?\\b"
        },
        {
          "name": "constant.language.boolean.yini",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "support.function.yini",
          "match": "\\b(Dyna|List|Set|Array|Coord|Color|Path)\\b"
        },
        {
          "name": "constant.other.color.yini",
          "match": "#[0-9a-fA-F]{6}"
        },
        {
          "name": "variable.other.macro.yini",
          "match": "@[a-zA-Z0-9_]+"
        }
      ]
    }
  }
}